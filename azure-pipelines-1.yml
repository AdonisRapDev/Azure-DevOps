# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - bash: echo “Build”
    - task: ServiceNow-DevOps-Agent-Artifact-Registration@1
      inputs:
        connectedServiceName: 'dev105110-Adonis Test project-ServiceNow DevOps Service Connection'
        artifactsPayload: |
          {
            "artifacts": [
                {
                  "name": "_Pipeline 1",
                  "version": "1.$(Build.BuildId)",
                  "semanticVersion": "1.$(Build.BuildId).0",
                  "repositoryName": "Pipeline 1"
                }
            ]
          }
    

- stage: Test
  jobs:
  - job: Unit_Tests
    steps:
    - script: echo “Unit Tests”
    - task: CmdLine@2
      inputs:
        script: |
          curl -X POST "https://dev105110.service-now.com/api/sn_devops/devops/package/registration?toolId=db976dc997020110b33af5b3f153af54" -H "accept: application/json"\ -H "Content-Type: application/json"\ -u "devops.integration.user":"nE9njUJZ&!98"\ -d "{ "artifacts": [ { "name": "sp-boot-app", "version": "1.320", "semanticVersion": "1.320.0", "repositoryName": "Azure-DevOps" } ], "pipelineName": "Pipeline-1", "taskExecutionNumber": "320", "stageName": "Build" } }" 
  - job: 'Checkmarx_Scan'
    dependsOn: 'Unit_Tests'
    steps:
    - script: echo Checkmarx Scan



- stage: Deploy
  jobs:
  - job: UAT_Deploy
    steps:
    - bash: echo “UAT Deploy”
    - task: ServiceNow-DevOps-Agent-Package-Registration@1
      inputs:
        connectedServiceName: 'dev105110-Adonis Test project-ServiceNow DevOps Service Connection'
        packageName: 'Can be anything'
        artifactsPayload: |
          {
              "artifacts": [
              {
                  "name": "_Pipeline 1",
                  "repositoryName": "Pipeline 1",
                  "version": "1.$(build.buildId)",
                  "currentBuildInfo": "true"
              }]
          }
  - job:  Production_Deploy
    steps:
    - bash: echo “Production Deploy”
    

   